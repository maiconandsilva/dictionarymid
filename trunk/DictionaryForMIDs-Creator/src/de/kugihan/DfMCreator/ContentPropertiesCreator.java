/* ////////////////////////////////////////////////////////////////
* 
*   DICTIONARYFORMIDS-CREATOR
*   
*   This file is part of DictionaryForMIDs-Creator
*   Copyright (C) 2012 Karim Mahamane Karimou
*   DictionaryForMIDs-Creator is a GUI wrapper around various
*   DictionaryForMIDs tools, among others we have
*   DictdToDictionaryForMIDs, DictionaryGeneration,
*   JarCreator and BitmapFontGenerator.
*   
*   DictionaryForMIDs-Creator is free software;
*   you can redistribute it and/or modify it under the terms
*   of the GNU General Public License as published by the
*   Free Software Foundation; either version 2 of the License, or
*   (at your option) any later version.
*   
*   DictionaryForMIDs-Creator is distributed in the hope that
*   it will be useful, but WITHOUT ANY WARRANTY; without even
*   the implied warranty of MERCHANTABILITY or
*   FITNESS FOR A PARTICULAR PURPOSE.  See the
*   GNU General Public License for more details.
*   	
*   You should have received a copy of the GNU General Public
*   License along with DictionaryForMIDs-Creator;
*   if not, write to the Free Software Foundation, Inc.,
*   51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
*   
* //////////////////////////////////////////////////////////////// */


package de.kugihan.DfMCreator;

import edu.hws.eck.mdb.I18n;
import java.awt.Cursor;
import java.awt.Toolkit;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.Random;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;


public class ContentPropertiesCreator extends javax.swing.JDialog implements PropertyChangeListener {
    
    public static ContentPropertiesCreator getContentPropsEditor(){
        return new ContentPropertiesCreator();
    }

    /**
     * Creates new form ContentPropertiesCreator
     */
    public ContentPropertiesCreator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        FontColourLabel2 = new javax.swing.JLabel();
        FontColourComboBox2 = new javax.swing.JComboBox();
        FontColourLB4 = new javax.swing.JLabel();
        FontColourCB4 = new javax.swing.JComboBox();
        FontColourCB6 = new javax.swing.JComboBox();
        FontColourLB6 = new javax.swing.JLabel();
        FontColourCB5 = new javax.swing.JComboBox();
        FontColourLB5 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        NumOfContentDecsCB1 = new javax.swing.JComboBox();
        NumOfContentDecsCB2 = new javax.swing.JComboBox();
        NumOfContentDecsCB3 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        DisplaySelectableCheckBox1 = new javax.swing.JCheckBox();
        DisplaySelectableCheckB1 = new javax.swing.JCheckBox();
        DisplaySelectableCheckB3 = new javax.swing.JCheckBox();
        DisplaySelectableCheckB2 = new javax.swing.JCheckBox();
        jPanel27 = new javax.swing.JPanel();
        FontStyleLabel2 = new javax.swing.JLabel();
        FontStyleComboBox2 = new javax.swing.JComboBox();
        FontStyleLB4 = new javax.swing.JLabel();
        FontStyleCB4 = new javax.swing.JComboBox();
        FontStyleCB6 = new javax.swing.JComboBox();
        FontStyleLB6 = new javax.swing.JLabel();
        FontStyleCB5 = new javax.swing.JComboBox();
        FontStyleLB5 = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        DisplayTextLable3 = new javax.swing.JLabel();
        DisplayTextLB7 = new javax.swing.JLabel();
        DisplayTextLB9 = new javax.swing.JLabel();
        DisplayTextLB8 = new javax.swing.JLabel();
        DisplayTextTextField3 = new javax.swing.JTextField();
        DisplayTextTF7 = new javax.swing.JTextField();
        DisplayTextTF8 = new javax.swing.JTextField();
        DisplayTextTF9 = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        DisplaySelectableCheckBox3 = new javax.swing.JCheckBox();
        DisplaySelectableCheckB7 = new javax.swing.JCheckBox();
        DisplaySelectableCheckB9 = new javax.swing.JCheckBox();
        DisplaySelectableCheckB8 = new javax.swing.JCheckBox();
        jPanel31 = new javax.swing.JPanel();
        FontColourLabel3 = new javax.swing.JLabel();
        FontColourLB7 = new javax.swing.JLabel();
        FontColourLB9 = new javax.swing.JLabel();
        FontColourLB8 = new javax.swing.JLabel();
        FontColourComboBox3 = new javax.swing.JComboBox();
        FontColourCB7 = new javax.swing.JComboBox();
        FontColourCB8 = new javax.swing.JComboBox();
        FontColourCB9 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        progressBar = new javax.swing.JProgressBar();
        jPanel4 = new javax.swing.JPanel();
        setContentValsBT = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        DisplaySelectableCheckBox2 = new javax.swing.JCheckBox();
        DisplaySelectableCheckB4 = new javax.swing.JCheckBox();
        DisplaySelectableCheckB6 = new javax.swing.JCheckBox();
        DisplaySelectableCheckB5 = new javax.swing.JCheckBox();
        jPanel26 = new javax.swing.JPanel();
        FontStyleLabel1 = new javax.swing.JLabel();
        FontStyleComboBox1 = new javax.swing.JComboBox();
        FontStyleLB1 = new javax.swing.JLabel();
        FontStyleCB1 = new javax.swing.JComboBox();
        FontStyleLB3 = new javax.swing.JLabel();
        FontStyleCB3 = new javax.swing.JComboBox();
        FontStyleCB2 = new javax.swing.JComboBox();
        FontStyleLB2 = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        FontColourLabel = new javax.swing.JLabel();
        FontColourComboBox = new javax.swing.JComboBox();
        FontColourLB1 = new javax.swing.JLabel();
        FontColourCB1 = new javax.swing.JComboBox();
        FontColourLB3 = new javax.swing.JLabel();
        FontColourCB3 = new javax.swing.JComboBox();
        FontColourCB2 = new javax.swing.JComboBox();
        FontColourLB2 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        DisplayTextLabel1 = new javax.swing.JLabel();
        DisplayTextLB1 = new javax.swing.JLabel();
        DisplayTextLB3 = new javax.swing.JLabel();
        DisplayTextLB2 = new javax.swing.JLabel();
        DisplayTextTextField1 = new javax.swing.JTextField();
        DisplayTextTF1 = new javax.swing.JTextField();
        DisplayTextTF2 = new javax.swing.JTextField();
        DisplayTextTF3 = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        DisplayTextLable2 = new javax.swing.JLabel();
        DisplayTextLB4 = new javax.swing.JLabel();
        DisplayTextLB6 = new javax.swing.JLabel();
        DisplayTextLB5 = new javax.swing.JLabel();
        DisplayTextTF5 = new javax.swing.JTextField();
        DisplayTextTF4 = new javax.swing.JTextField();
        DisplayTextTextField2 = new javax.swing.JTextField();
        DisplayTextTF6 = new javax.swing.JTextField();
        jPanel28 = new javax.swing.JPanel();
        FontStyleLabel3 = new javax.swing.JLabel();
        FontStyleLB7 = new javax.swing.JLabel();
        FontStyleLB9 = new javax.swing.JLabel();
        FontStyleLB8 = new javax.swing.JLabel();
        FontStyleComboBox3 = new javax.swing.JComboBox();
        FontStyleCB7 = new javax.swing.JComboBox();
        FontStyleCB8 = new javax.swing.JComboBox();
        FontStyleCB9 = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ContentProperties-Creator");

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel30.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel30.setLayout(new java.awt.GridBagLayout());

        FontColourLabel2.setText("language2Content01FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel30.add(FontColourLabel2, gridBagConstraints);

        FontColourComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourComboBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel30.add(FontColourComboBox2, gridBagConstraints);

        FontColourLB4.setText("language2Content02FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel30.add(FontColourLB4, gridBagConstraints);

        FontColourCB4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourCB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourCB4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel30.add(FontColourCB4, gridBagConstraints);

        FontColourCB6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourCB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourCB6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel30.add(FontColourCB6, gridBagConstraints);

        FontColourLB6.setText("language2Content04FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel30.add(FontColourLB6, gridBagConstraints);

        FontColourCB5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourCB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourCB5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel30.add(FontColourCB5, gridBagConstraints);

        FontColourLB5.setText("language2Content03FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel30.add(FontColourLB5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel30, gridBagConstraints);

        jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel22.setLayout(new java.awt.GridBagLayout());

        jLabel15.setText("<html>NumberOfContent<br>Declarations");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 10);
        jPanel22.add(jLabel15, gridBagConstraints);

        NumOfContentDecsCB1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        NumOfContentDecsCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumOfContentDecsCB1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 10);
        jPanel22.add(NumOfContentDecsCB1, gridBagConstraints);

        NumOfContentDecsCB2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        NumOfContentDecsCB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumOfContentDecsCB2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 10);
        jPanel22.add(NumOfContentDecsCB2, gridBagConstraints);

        NumOfContentDecsCB3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        NumOfContentDecsCB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumOfContentDecsCB3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 10);
        jPanel22.add(NumOfContentDecsCB3, gridBagConstraints);

        jLabel17.setText(I18n.tr("language-1")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 10);
        jPanel22.add(jLabel17, gridBagConstraints);

        jLabel32.setText(I18n.tr("language-2")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 10);
        jPanel22.add(jLabel32, gridBagConstraints);

        jLabel33.setText(I18n.tr("language-3")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 10);
        jPanel22.add(jLabel33, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel22, gridBagConstraints);

        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel16.setLayout(new java.awt.GridBagLayout());

        DisplaySelectableCheckBox1.setSelected(true);
        DisplaySelectableCheckBox1.setText("language1Content01DisplaySelectable");
        DisplaySelectableCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel16.add(DisplaySelectableCheckBox1, gridBagConstraints);

        DisplaySelectableCheckB1.setSelected(true);
        DisplaySelectableCheckB1.setText("language1Content02DisplaySelectable");
        DisplaySelectableCheckB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckB1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel16.add(DisplaySelectableCheckB1, gridBagConstraints);

        DisplaySelectableCheckB3.setSelected(true);
        DisplaySelectableCheckB3.setText("language1Content04DisplaySelectable");
        DisplaySelectableCheckB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckB3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel16.add(DisplaySelectableCheckB3, gridBagConstraints);

        DisplaySelectableCheckB2.setSelected(true);
        DisplaySelectableCheckB2.setText("language1Content03DisplaySelectable");
        DisplaySelectableCheckB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckB2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel16.add(DisplaySelectableCheckB2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel16, gridBagConstraints);

        jPanel27.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel27.setLayout(new java.awt.GridBagLayout());

        FontStyleLabel2.setText("language2Content01FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel27.add(FontStyleLabel2, gridBagConstraints);

        FontStyleComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleComboBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel27.add(FontStyleComboBox2, gridBagConstraints);

        FontStyleLB4.setText("language2Content02FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel27.add(FontStyleLB4, gridBagConstraints);

        FontStyleCB4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleCB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleCB4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel27.add(FontStyleCB4, gridBagConstraints);

        FontStyleCB6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleCB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleCB6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel27.add(FontStyleCB6, gridBagConstraints);

        FontStyleLB6.setText("language2Content04FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel27.add(FontStyleLB6, gridBagConstraints);

        FontStyleCB5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleCB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleCB5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel27.add(FontStyleCB5, gridBagConstraints);

        FontStyleLB5.setText("language2Content03FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel27.add(FontStyleLB5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel27, gridBagConstraints);

        jPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel23.setLayout(new java.awt.GridBagLayout());

        DisplayTextLable3.setText("language3Content01DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel23.add(DisplayTextLable3, gridBagConstraints);

        DisplayTextLB7.setText("language3Content02DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel23.add(DisplayTextLB7, gridBagConstraints);

        DisplayTextLB9.setText("language3Content04DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel23.add(DisplayTextLB9, gridBagConstraints);

        DisplayTextLB8.setText("language3Content03DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel23.add(DisplayTextLB8, gridBagConstraints);

        DisplayTextTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayTextTextField3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel23.add(DisplayTextTextField3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel23.add(DisplayTextTF7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel23.add(DisplayTextTF8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel23.add(DisplayTextTF9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel23, gridBagConstraints);

        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel15.setLayout(new java.awt.GridBagLayout());

        DisplaySelectableCheckBox3.setSelected(true);
        DisplaySelectableCheckBox3.setText("language3Content01DisplaySelectable");
        DisplaySelectableCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel15.add(DisplaySelectableCheckBox3, gridBagConstraints);

        DisplaySelectableCheckB7.setSelected(true);
        DisplaySelectableCheckB7.setText("language3Content02DisplaySelectable");
        DisplaySelectableCheckB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckB7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel15.add(DisplaySelectableCheckB7, gridBagConstraints);

        DisplaySelectableCheckB9.setSelected(true);
        DisplaySelectableCheckB9.setText("language3Content04DisplaySelectable");
        DisplaySelectableCheckB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckB9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel15.add(DisplaySelectableCheckB9, gridBagConstraints);

        DisplaySelectableCheckB8.setSelected(true);
        DisplaySelectableCheckB8.setText("language3Content03DisplaySelectable");
        DisplaySelectableCheckB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckB8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel15.add(DisplaySelectableCheckB8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel15, gridBagConstraints);

        jPanel31.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel31.setLayout(new java.awt.GridBagLayout());

        FontColourLabel3.setText("language3Content01FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel31.add(FontColourLabel3, gridBagConstraints);

        FontColourLB7.setText("language3Content02FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel31.add(FontColourLB7, gridBagConstraints);

        FontColourLB9.setText("language3Content04FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel31.add(FontColourLB9, gridBagConstraints);

        FontColourLB8.setText("language3Content03FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel31.add(FontColourLB8, gridBagConstraints);

        FontColourComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourComboBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel31.add(FontColourComboBox3, gridBagConstraints);

        FontColourCB7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourCB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourCB7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel31.add(FontColourCB7, gridBagConstraints);

        FontColourCB8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourCB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourCB8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel31.add(FontColourCB8, gridBagConstraints);

        FontColourCB9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourCB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourCB9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel31.add(FontColourCB9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel31, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 370;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(progressBar, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        setContentValsBT.setText(I18n.tr("save.values.contentPropsEditor")); // NOI18N
        setContentValsBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setContentValsBTActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel4.add(setContentValsBT, gridBagConstraints);

        quitButton.setText(I18n.tr("QUIT.contentPropsEditor")); // NOI18N
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel4.add(quitButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanel2.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel2, gridBagConstraints);

        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel14.setLayout(new java.awt.GridBagLayout());

        DisplaySelectableCheckBox2.setSelected(true);
        DisplaySelectableCheckBox2.setText("language2Content01DisplaySelectable");
        DisplaySelectableCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckBox2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel14.add(DisplaySelectableCheckBox2, gridBagConstraints);

        DisplaySelectableCheckB4.setSelected(true);
        DisplaySelectableCheckB4.setText("language2Content02DisplaySelectable");
        DisplaySelectableCheckB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckB4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel14.add(DisplaySelectableCheckB4, gridBagConstraints);

        DisplaySelectableCheckB6.setSelected(true);
        DisplaySelectableCheckB6.setText("language2Content04DisplaySelectable");
        DisplaySelectableCheckB6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckB6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel14.add(DisplaySelectableCheckB6, gridBagConstraints);

        DisplaySelectableCheckB5.setSelected(true);
        DisplaySelectableCheckB5.setText("language2Content03DisplaySelectable");
        DisplaySelectableCheckB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplaySelectableCheckB5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel14.add(DisplaySelectableCheckB5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel14, gridBagConstraints);

        jPanel26.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel26.setLayout(new java.awt.GridBagLayout());

        FontStyleLabel1.setText("language1Content01FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel26.add(FontStyleLabel1, gridBagConstraints);

        FontStyleComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleComboBox1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel26.add(FontStyleComboBox1, gridBagConstraints);

        FontStyleLB1.setText("language1Content02FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel26.add(FontStyleLB1, gridBagConstraints);

        FontStyleCB1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleCB1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel26.add(FontStyleCB1, gridBagConstraints);

        FontStyleLB3.setText("language1Content04FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel26.add(FontStyleLB3, gridBagConstraints);

        FontStyleCB3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleCB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleCB3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel26.add(FontStyleCB3, gridBagConstraints);

        FontStyleCB2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleCB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleCB2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel26.add(FontStyleCB2, gridBagConstraints);

        FontStyleLB2.setText("language1Content03FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel26.add(FontStyleLB2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel26, gridBagConstraints);

        jPanel29.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel29.setLayout(new java.awt.GridBagLayout());

        FontColourLabel.setText("language1Content01FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel29.add(FontColourLabel, gridBagConstraints);

        FontColourComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel29.add(FontColourComboBox, gridBagConstraints);

        FontColourLB1.setText("language1Content02FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel29.add(FontColourLB1, gridBagConstraints);

        FontColourCB1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourCB1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel29.add(FontColourCB1, gridBagConstraints);

        FontColourLB3.setText("language1Content04FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel29.add(FontColourLB3, gridBagConstraints);

        FontColourCB3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourCB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourCB3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel29.add(FontColourCB3, gridBagConstraints);

        FontColourCB2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Maroon", "Red", "Yellow", "Green", "Lime", "Navy", "Blue", "Teal", "Aqua", "Purple", "Fuchsia", "Olive", "Gray", "Silver", "Black" }));
        FontColourCB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontColourCB2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel29.add(FontColourCB2, gridBagConstraints);

        FontColourLB2.setText("language1Content03FontColour");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel29.add(FontColourLB2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel29, gridBagConstraints);

        jPanel24.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel24.setLayout(new java.awt.GridBagLayout());

        DisplayTextLabel1.setText("language1Content01DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel24.add(DisplayTextLabel1, gridBagConstraints);

        DisplayTextLB1.setText("language1Content02DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel24.add(DisplayTextLB1, gridBagConstraints);

        DisplayTextLB3.setText("language1Content04DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel24.add(DisplayTextLB3, gridBagConstraints);

        DisplayTextLB2.setText("language1Content03DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel24.add(DisplayTextLB2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel24.add(DisplayTextTextField1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel24.add(DisplayTextTF1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel24.add(DisplayTextTF2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel24.add(DisplayTextTF3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel24, gridBagConstraints);

        jPanel25.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel25.setLayout(new java.awt.GridBagLayout());

        DisplayTextLable2.setText("language2Content01DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(DisplayTextLable2, gridBagConstraints);

        DisplayTextLB4.setText("language2Content02DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(DisplayTextLB4, gridBagConstraints);

        DisplayTextLB6.setText("language2Content04DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(DisplayTextLB6, gridBagConstraints);

        DisplayTextLB5.setText("language2Content03DisplayText");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel25.add(DisplayTextLB5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel25.add(DisplayTextTF5, gridBagConstraints);

        DisplayTextTF4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayTextTF4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel25.add(DisplayTextTF4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel25.add(DisplayTextTextField2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 80;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 70);
        jPanel25.add(DisplayTextTF6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel25, gridBagConstraints);

        jPanel28.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel28.setLayout(new java.awt.GridBagLayout());

        FontStyleLabel3.setText("language3Content01FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel28.add(FontStyleLabel3, gridBagConstraints);

        FontStyleLB7.setText("language3Content02FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel28.add(FontStyleLB7, gridBagConstraints);

        FontStyleLB9.setText("language3Content04FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel28.add(FontStyleLB9, gridBagConstraints);

        FontStyleLB8.setText("language3Content03FontStyle");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel28.add(FontStyleLB8, gridBagConstraints);

        FontStyleComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleComboBox3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel28.add(FontStyleComboBox3, gridBagConstraints);

        FontStyleCB7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleCB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleCB7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel28.add(FontStyleCB7, gridBagConstraints);

        FontStyleCB8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleCB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleCB8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel28.add(FontStyleCB8, gridBagConstraints);

        FontStyleCB9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "plain", "bold", "italic", "underlined" }));
        FontStyleCB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontStyleCB9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel28.add(FontStyleCB9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jPanel28, gridBagConstraints);

        jScrollPane2.setViewportView(jPanel3);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText(I18n.tr("FILE.contentPropsEditor")); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText(I18n.tr("save.values.contentPropsEditor")); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText(I18n.tr("QUIT.contentPropsEditor")); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("?");

        jMenuItem3.setText(I18n.tr("about.content.properties.creator")); // NOI18N
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FontColourComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourComboBox2ActionPerformed

    }//GEN-LAST:event_FontColourComboBox2ActionPerformed

    private void FontColourCB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourCB4ActionPerformed

    }//GEN-LAST:event_FontColourCB4ActionPerformed

    private void FontColourCB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourCB6ActionPerformed

    }//GEN-LAST:event_FontColourCB6ActionPerformed

    private void FontColourCB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourCB5ActionPerformed

    }//GEN-LAST:event_FontColourCB5ActionPerformed

    private void DisplaySelectableCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckBox1ActionPerformed

    }//GEN-LAST:event_DisplaySelectableCheckBox1ActionPerformed

    private void DisplaySelectableCheckB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckB1ActionPerformed

    }//GEN-LAST:event_DisplaySelectableCheckB1ActionPerformed

    private void DisplaySelectableCheckB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckB3ActionPerformed

    }//GEN-LAST:event_DisplaySelectableCheckB3ActionPerformed

    private void DisplaySelectableCheckB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckB2ActionPerformed

    }//GEN-LAST:event_DisplaySelectableCheckB2ActionPerformed

    private void FontStyleComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleComboBox2ActionPerformed

    }//GEN-LAST:event_FontStyleComboBox2ActionPerformed

    private void FontStyleCB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleCB4ActionPerformed

    }//GEN-LAST:event_FontStyleCB4ActionPerformed

    private void FontStyleCB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleCB6ActionPerformed

    }//GEN-LAST:event_FontStyleCB6ActionPerformed

    private void FontStyleCB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleCB5ActionPerformed

    }//GEN-LAST:event_FontStyleCB5ActionPerformed

    private void DisplaySelectableCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckBox3ActionPerformed

    }//GEN-LAST:event_DisplaySelectableCheckBox3ActionPerformed

    private void DisplaySelectableCheckB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckB7ActionPerformed

    }//GEN-LAST:event_DisplaySelectableCheckB7ActionPerformed

    private void DisplaySelectableCheckB9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckB9ActionPerformed

    }//GEN-LAST:event_DisplaySelectableCheckB9ActionPerformed

    private void DisplaySelectableCheckB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckB8ActionPerformed

    }//GEN-LAST:event_DisplaySelectableCheckB8ActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_quitButtonActionPerformed

    private void DisplaySelectableCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckBox2ActionPerformed

   }//GEN-LAST:event_DisplaySelectableCheckBox2ActionPerformed

    private void DisplaySelectableCheckB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckB4ActionPerformed

   }//GEN-LAST:event_DisplaySelectableCheckB4ActionPerformed

    private void DisplaySelectableCheckB6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckB6ActionPerformed

    }//GEN-LAST:event_DisplaySelectableCheckB6ActionPerformed

    private void DisplaySelectableCheckB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplaySelectableCheckB5ActionPerformed

    }//GEN-LAST:event_DisplaySelectableCheckB5ActionPerformed

    private void FontStyleComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleComboBox1ActionPerformed

    }//GEN-LAST:event_FontStyleComboBox1ActionPerformed

    private void FontStyleCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleCB1ActionPerformed

    }//GEN-LAST:event_FontStyleCB1ActionPerformed

    private void FontStyleCB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleCB3ActionPerformed

    }//GEN-LAST:event_FontStyleCB3ActionPerformed

    private void FontStyleCB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleCB2ActionPerformed

    }//GEN-LAST:event_FontStyleCB2ActionPerformed

    private void FontColourComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourComboBoxActionPerformed

    }//GEN-LAST:event_FontColourComboBoxActionPerformed

    private void FontColourCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourCB1ActionPerformed

    }//GEN-LAST:event_FontColourCB1ActionPerformed

    private void FontColourCB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourCB3ActionPerformed

    }//GEN-LAST:event_FontColourCB3ActionPerformed

    private void FontColourCB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourCB2ActionPerformed

    }//GEN-LAST:event_FontColourCB2ActionPerformed

    private void FontStyleComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleComboBox3ActionPerformed

   }//GEN-LAST:event_FontStyleComboBox3ActionPerformed

    private void FontStyleCB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleCB7ActionPerformed

   }//GEN-LAST:event_FontStyleCB7ActionPerformed

    private void FontStyleCB9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleCB9ActionPerformed

   }//GEN-LAST:event_FontStyleCB9ActionPerformed

    private void FontStyleCB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontStyleCB8ActionPerformed

    }//GEN-LAST:event_FontStyleCB8ActionPerformed

    private void FontColourComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourComboBox3ActionPerformed

   }//GEN-LAST:event_FontColourComboBox3ActionPerformed

    private void FontColourCB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourCB7ActionPerformed

   }//GEN-LAST:event_FontColourCB7ActionPerformed

    private void FontColourCB9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourCB9ActionPerformed

    }//GEN-LAST:event_FontColourCB9ActionPerformed

    private void FontColourCB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontColourCB8ActionPerformed

    }//GEN-LAST:event_FontColourCB8ActionPerformed

    private void DisplayTextTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayTextTextField3ActionPerformed

    }//GEN-LAST:event_DisplayTextTextField3ActionPerformed

    private void NumOfContentDecsCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumOfContentDecsCB1ActionPerformed
        updateNumOfContentDec();
    }//GEN-LAST:event_NumOfContentDecsCB1ActionPerformed

    private void NumOfContentDecsCB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumOfContentDecsCB2ActionPerformed
        updateNumOfContentDec();
    }//GEN-LAST:event_NumOfContentDecsCB2ActionPerformed

    private void NumOfContentDecsCB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumOfContentDecsCB3ActionPerformed
        updateNumOfContentDec();
    }//GEN-LAST:event_NumOfContentDecsCB3ActionPerformed

    private void setContentValsBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setContentValsBTActionPerformed
        // actually saving the values
        setTheContentNNProperties();
        // calling the fake progress bar
        progBarActPerf();
    }//GEN-LAST:event_setContentValsBTActionPerformed

    private void DisplayTextTF4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayTextTF4ActionPerformed

    }//GEN-LAST:event_DisplayTextTF4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // actually saving the values
        setTheContentNNProperties();
        // calling the fake progress bar
        progBarActPerf();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        JOptionPane.showMessageDialog(this, I18n.tr("about.message.contentPropsEditor"),
                                            I18n.tr("title.contentPropsEditor"), JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /*
         * Set the default look and feel
         */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {                   
             javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException |
        		 IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DfMCreatorMain.class.getName()).
            log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
              //  new ContentPropertiesCreator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox DisplaySelectableCheckB1;
    private javax.swing.JCheckBox DisplaySelectableCheckB2;
    private javax.swing.JCheckBox DisplaySelectableCheckB3;
    private javax.swing.JCheckBox DisplaySelectableCheckB4;
    private javax.swing.JCheckBox DisplaySelectableCheckB5;
    private javax.swing.JCheckBox DisplaySelectableCheckB6;
    private javax.swing.JCheckBox DisplaySelectableCheckB7;
    private javax.swing.JCheckBox DisplaySelectableCheckB8;
    private javax.swing.JCheckBox DisplaySelectableCheckB9;
    private javax.swing.JCheckBox DisplaySelectableCheckBox1;
    private javax.swing.JCheckBox DisplaySelectableCheckBox2;
    private javax.swing.JCheckBox DisplaySelectableCheckBox3;
    private javax.swing.JLabel DisplayTextLB1;
    private javax.swing.JLabel DisplayTextLB2;
    private javax.swing.JLabel DisplayTextLB3;
    private javax.swing.JLabel DisplayTextLB4;
    private javax.swing.JLabel DisplayTextLB5;
    private javax.swing.JLabel DisplayTextLB6;
    private javax.swing.JLabel DisplayTextLB7;
    private javax.swing.JLabel DisplayTextLB8;
    private javax.swing.JLabel DisplayTextLB9;
    private javax.swing.JLabel DisplayTextLabel1;
    private javax.swing.JLabel DisplayTextLable2;
    private javax.swing.JLabel DisplayTextLable3;
    private javax.swing.JTextField DisplayTextTF1;
    private javax.swing.JTextField DisplayTextTF2;
    private javax.swing.JTextField DisplayTextTF3;
    private javax.swing.JTextField DisplayTextTF4;
    private javax.swing.JTextField DisplayTextTF5;
    private javax.swing.JTextField DisplayTextTF6;
    private javax.swing.JTextField DisplayTextTF7;
    private javax.swing.JTextField DisplayTextTF8;
    private javax.swing.JTextField DisplayTextTF9;
    private javax.swing.JTextField DisplayTextTextField1;
    private javax.swing.JTextField DisplayTextTextField2;
    private javax.swing.JTextField DisplayTextTextField3;
    private javax.swing.JComboBox FontColourCB1;
    private javax.swing.JComboBox FontColourCB2;
    private javax.swing.JComboBox FontColourCB3;
    private javax.swing.JComboBox FontColourCB4;
    private javax.swing.JComboBox FontColourCB5;
    private javax.swing.JComboBox FontColourCB6;
    private javax.swing.JComboBox FontColourCB7;
    private javax.swing.JComboBox FontColourCB8;
    private javax.swing.JComboBox FontColourCB9;
    private javax.swing.JComboBox FontColourComboBox;
    private javax.swing.JComboBox FontColourComboBox2;
    private javax.swing.JComboBox FontColourComboBox3;
    private javax.swing.JLabel FontColourLB1;
    private javax.swing.JLabel FontColourLB2;
    private javax.swing.JLabel FontColourLB3;
    private javax.swing.JLabel FontColourLB4;
    private javax.swing.JLabel FontColourLB5;
    private javax.swing.JLabel FontColourLB6;
    private javax.swing.JLabel FontColourLB7;
    private javax.swing.JLabel FontColourLB8;
    private javax.swing.JLabel FontColourLB9;
    private javax.swing.JLabel FontColourLabel;
    private javax.swing.JLabel FontColourLabel2;
    private javax.swing.JLabel FontColourLabel3;
    private javax.swing.JComboBox FontStyleCB1;
    private javax.swing.JComboBox FontStyleCB2;
    private javax.swing.JComboBox FontStyleCB3;
    private javax.swing.JComboBox FontStyleCB4;
    private javax.swing.JComboBox FontStyleCB5;
    private javax.swing.JComboBox FontStyleCB6;
    private javax.swing.JComboBox FontStyleCB7;
    private javax.swing.JComboBox FontStyleCB8;
    private javax.swing.JComboBox FontStyleCB9;
    private javax.swing.JComboBox FontStyleComboBox1;
    private javax.swing.JComboBox FontStyleComboBox2;
    private javax.swing.JComboBox FontStyleComboBox3;
    private javax.swing.JLabel FontStyleLB1;
    private javax.swing.JLabel FontStyleLB2;
    private javax.swing.JLabel FontStyleLB3;
    private javax.swing.JLabel FontStyleLB4;
    private javax.swing.JLabel FontStyleLB5;
    private javax.swing.JLabel FontStyleLB6;
    private javax.swing.JLabel FontStyleLB7;
    private javax.swing.JLabel FontStyleLB8;
    private javax.swing.JLabel FontStyleLB9;
    private javax.swing.JLabel FontStyleLabel1;
    private javax.swing.JLabel FontStyleLabel2;
    private javax.swing.JLabel FontStyleLabel3;
    private javax.swing.JComboBox NumOfContentDecsCB1;
    private javax.swing.JComboBox NumOfContentDecsCB2;
    private javax.swing.JComboBox NumOfContentDecsCB3;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton quitButton;
    private javax.swing.JButton setContentValsBT;
    // End of variables declaration//GEN-END:variables

    
    /**
     * updateNumOfContentDec() updates (shows or hides some components)
     * the ContentProperties-Creator's window according to the number of
     * content declaration chosen for a particular language.
     */
    public void updateNumOfContentDec(){
        switch (NumOfContentDecsCB1.getSelectedItem().toString()) {
            case "1":
                FontColourCB1.setVisible(false);
                FontColourCB2.setVisible(false);
                FontColourCB3.setVisible(false);
                FontColourLB1.setVisible(false);
                FontColourLB2.setVisible(false);
                FontColourLB3.setVisible(false);
                FontStyleCB1.setVisible(false);
                FontStyleCB2.setVisible(false);
                FontStyleCB3.setVisible(false);
                FontStyleLB1.setVisible(false);
                FontStyleLB2.setVisible(false);
                FontStyleLB3.setVisible(false);
                DisplayTextTF1.setVisible(false);
                DisplayTextTF2.setVisible(false);
                DisplayTextTF3.setVisible(false);
                DisplayTextLB1.setVisible(false);
                DisplayTextLB2.setVisible(false);
                DisplayTextLB3.setVisible(false);
                DisplaySelectableCheckB1.setVisible(false);
                DisplaySelectableCheckB2.setVisible(false);
                DisplaySelectableCheckB3.setVisible(false);
                break;
            case "2":
                FontColourCB1.setVisible(true);
                FontColourCB2.setVisible(false);
                FontColourCB3.setVisible(false);
                FontColourLB1.setVisible(true);
                FontColourLB2.setVisible(false);
                FontColourLB3.setVisible(false);
                FontStyleCB1.setVisible(true);
                FontStyleCB2.setVisible(false);
                FontStyleCB3.setVisible(false);
                FontStyleLB1.setVisible(true);
                FontStyleLB2.setVisible(false);
                FontStyleLB3.setVisible(false);
                DisplayTextTF1.setVisible(true);
                DisplayTextTF2.setVisible(false);
                DisplayTextTF3.setVisible(false);
                DisplayTextLB1.setVisible(true);
                DisplayTextLB2.setVisible(false);
                DisplayTextLB3.setVisible(false);
                DisplaySelectableCheckB1.setVisible(true);
                DisplaySelectableCheckB2.setVisible(false);
                DisplaySelectableCheckB3.setVisible(false);
                break;
            case "3":
                FontColourCB1.setVisible(true);
                FontColourCB2.setVisible(true);
                FontColourCB3.setVisible(false);
                FontColourLB1.setVisible(true);
                FontColourLB2.setVisible(true);
                FontColourLB3.setVisible(false);
                FontStyleCB1.setVisible(true);
                FontStyleCB2.setVisible(true);
                FontStyleCB3.setVisible(false);
                FontStyleLB1.setVisible(true);
                FontStyleLB2.setVisible(true);
                FontStyleLB3.setVisible(false);
                DisplayTextTF1.setVisible(true);
                DisplayTextTF2.setVisible(true);
                DisplayTextTF3.setVisible(false);
                DisplayTextLB1.setVisible(true);
                DisplayTextLB2.setVisible(true);
                DisplayTextLB3.setVisible(false);
                DisplaySelectableCheckB1.setVisible(true);
                DisplaySelectableCheckB2.setVisible(true);
                DisplaySelectableCheckB3.setVisible(false);
                break;
        }
        if (NumOfContentDecsCB1.getSelectedItem().toString().equals("4")){
            FontColourCB1.setVisible(true);
            FontColourCB2.setVisible(true);
            FontColourCB3.setVisible(true);
            
            FontColourLB1.setVisible(true);
            FontColourLB2.setVisible(true);
            FontColourLB3.setVisible(true);
            
            FontStyleCB1.setVisible(true);
            FontStyleCB2.setVisible(true);
            FontStyleCB3.setVisible(true);
            
            FontStyleLB1.setVisible(true);       
            FontStyleLB2.setVisible(true);       
            FontStyleLB3.setVisible(true); 
            
            DisplayTextTF1.setVisible(true);
            DisplayTextTF2.setVisible(true);
            DisplayTextTF3.setVisible(true);
            
            DisplayTextLB1.setVisible(true);
            DisplayTextLB2.setVisible(true);
            DisplayTextLB3.setVisible(true);
            
            DisplaySelectableCheckB1.setVisible(true);
            DisplaySelectableCheckB2.setVisible(true);
            DisplaySelectableCheckB3.setVisible(true);
        }
        switch (NumOfContentDecsCB2.getSelectedItem().toString()) {
            case "1":
                FontColourCB4.setVisible(false);
                FontColourCB5.setVisible(false);
                FontColourCB6.setVisible(false);
                FontColourLB4.setVisible(false);
                FontColourLB5.setVisible(false);
                FontColourLB6.setVisible(false);
                FontStyleCB4.setVisible(false);
                FontStyleCB5.setVisible(false);
                FontStyleCB6.setVisible(false);
                FontStyleLB4.setVisible(false);
                FontStyleLB5.setVisible(false);
                FontStyleLB6.setVisible(false);
                DisplayTextTF4.setVisible(false);
                DisplayTextTF5.setVisible(false);
                DisplayTextTF6.setVisible(false);
                DisplayTextLB4.setVisible(false);
                DisplayTextLB5.setVisible(false);
                DisplayTextLB6.setVisible(false);
                DisplaySelectableCheckB4.setVisible(false);
                DisplaySelectableCheckB5.setVisible(false);
                DisplaySelectableCheckB6.setVisible(false);
                break;
            case "2":
                FontColourCB4.setVisible(true);
                FontColourCB5.setVisible(false);
                FontColourCB6.setVisible(false);
                FontColourLB4.setVisible(true);
                FontColourLB5.setVisible(false);
                FontColourLB6.setVisible(false);
                FontStyleCB4.setVisible(true);
                FontStyleCB5.setVisible(false);
                FontStyleCB6.setVisible(false);
                FontStyleLB4.setVisible(true);
                FontStyleLB5.setVisible(false);
                FontStyleLB6.setVisible(false);
                DisplayTextTF4.setVisible(true);
                DisplayTextTF5.setVisible(false);
                DisplayTextTF6.setVisible(false);
                DisplayTextLB4.setVisible(true);
                DisplayTextLB5.setVisible(false);
                DisplayTextLB6.setVisible(false);
                DisplaySelectableCheckB4.setVisible(true);
                DisplaySelectableCheckB5.setVisible(false);
                DisplaySelectableCheckB6.setVisible(false);
                break;
            case "3":
                FontColourCB4.setVisible(true);
                FontColourCB5.setVisible(true);
                FontColourCB6.setVisible(false);
                FontColourLB4.setVisible(true);
                FontColourLB5.setVisible(true);
                FontColourLB6.setVisible(false);
                FontStyleCB4.setVisible(true);
                FontStyleCB5.setVisible(true);
                FontStyleCB6.setVisible(false);
                FontStyleLB4.setVisible(true);
                FontStyleLB5.setVisible(true);
                FontStyleLB6.setVisible(false);
                DisplayTextTF4.setVisible(true);
                DisplayTextTF5.setVisible(true);
                DisplayTextTF6.setVisible(false);
                DisplayTextLB4.setVisible(true);
                DisplayTextLB5.setVisible(true);
                DisplayTextLB6.setVisible(false);
                DisplaySelectableCheckB4.setVisible(true);
                DisplaySelectableCheckB5.setVisible(true);
                DisplaySelectableCheckB6.setVisible(false);
                break;
            case "4":
                FontColourCB4.setVisible(true);
                FontColourCB5.setVisible(true);
                FontColourCB6.setVisible(true);
                FontColourLB4.setVisible(true);
                FontColourLB5.setVisible(true);
                FontColourLB6.setVisible(true);
                FontStyleCB4.setVisible(true);
                FontStyleCB5.setVisible(true);
                FontStyleCB6.setVisible(true);
                FontStyleLB4.setVisible(true);
                FontStyleLB5.setVisible(true);
                FontStyleLB6.setVisible(true);
                DisplayTextTF4.setVisible(true);
                DisplayTextTF5.setVisible(true);
                DisplayTextTF6.setVisible(true);
                DisplayTextLB4.setVisible(true);
                DisplayTextLB5.setVisible(true);
                DisplayTextLB6.setVisible(true);
                DisplaySelectableCheckB4.setVisible(true);
                DisplaySelectableCheckB5.setVisible(true);
                DisplaySelectableCheckB6.setVisible(true);
                break;
        }
        switch (NumOfContentDecsCB3.getSelectedItem().toString()) {
            case "1":
                FontColourCB7.setVisible(false);
                FontColourCB8.setVisible(false);
                FontColourCB9.setVisible(false);
                FontColourLB7.setVisible(false);
                FontColourLB8.setVisible(false);
                FontColourLB9.setVisible(false);
                FontStyleCB7.setVisible(false);
                FontStyleCB8.setVisible(false);
                FontStyleCB9.setVisible(false);
                FontStyleLB7.setVisible(false);
                FontStyleLB8.setVisible(false);
                FontStyleLB9.setVisible(false);
                DisplayTextTF7.setVisible(false);
                DisplayTextTF8.setVisible(false);
                DisplayTextTF9.setVisible(false);
                DisplayTextLB7.setVisible(false);
                DisplayTextLB8.setVisible(false);
                DisplayTextLB9.setVisible(false);
                DisplaySelectableCheckB7.setVisible(false);
                DisplaySelectableCheckB8.setVisible(false);
                DisplaySelectableCheckB9.setVisible(false);
                break;
            case "2":
                FontColourCB7.setVisible(true);
                FontColourCB8.setVisible(false);
                FontColourCB9.setVisible(false);
                FontColourLB7.setVisible(true);
                FontColourLB8.setVisible(false);
                FontColourLB9.setVisible(false);
                FontStyleCB7.setVisible(true);
                FontStyleCB8.setVisible(false);
                FontStyleCB9.setVisible(false);
                FontStyleLB7.setVisible(true);
                FontStyleLB8.setVisible(false);
                FontStyleLB9.setVisible(false);
                DisplayTextTF7.setVisible(true);
                DisplayTextTF8.setVisible(false);
                DisplayTextTF9.setVisible(false);
                DisplayTextLB7.setVisible(true);
                DisplayTextLB8.setVisible(false);
                DisplayTextLB9.setVisible(false);
                DisplaySelectableCheckB7.setVisible(true);
                DisplaySelectableCheckB8.setVisible(false);
                DisplaySelectableCheckB9.setVisible(false);
                break;
            case "3":
                FontColourCB7.setVisible(true);
                FontColourCB8.setVisible(true);
                FontColourCB9.setVisible(false);
                FontColourLB7.setVisible(true);
                FontColourLB8.setVisible(true);
                FontColourLB9.setVisible(false);
                FontStyleCB7.setVisible(true);
                FontStyleCB8.setVisible(true);
                FontStyleCB9.setVisible(false);
                FontStyleLB7.setVisible(true);
                FontStyleLB8.setVisible(true);
                FontStyleLB9.setVisible(false);
                DisplayTextTF7.setVisible(true);
                DisplayTextTF8.setVisible(true);
                DisplayTextTF9.setVisible(false);
                DisplayTextLB7.setVisible(true);
                DisplayTextLB8.setVisible(true);
                DisplayTextLB9.setVisible(false);
                DisplaySelectableCheckB7.setVisible(true);
                DisplaySelectableCheckB8.setVisible(true);
                DisplaySelectableCheckB9.setVisible(false);
                break;
            case "4":
                FontColourCB7.setVisible(true);
                FontColourCB8.setVisible(true);
                FontColourCB9.setVisible(true);
                FontColourLB7.setVisible(true);
                FontColourLB8.setVisible(true);
                FontColourLB9.setVisible(true);
                FontStyleCB7.setVisible(true);
                FontStyleCB8.setVisible(true);
                FontStyleCB9.setVisible(true);
                FontStyleLB7.setVisible(true);
                FontStyleLB8.setVisible(true);
                FontStyleLB9.setVisible(true);
                DisplayTextTF7.setVisible(true);
                DisplayTextTF8.setVisible(true);
                DisplayTextTF9.setVisible(true);
                DisplayTextLB7.setVisible(true);
                DisplayTextLB8.setVisible(true);
                DisplayTextLB9.setVisible(true);
                DisplaySelectableCheckB7.setVisible(true);
                DisplaySelectableCheckB8.setVisible(true);
                DisplaySelectableCheckB9.setVisible(true);
                break;
        }
    }

    /**
     * getRGBCodes() converts the selected item's
     * name into a RGB color and returns it.
     * @param comboBox
     * @returns String colorCode
     */
    public static String getRGBCodes(JComboBox comboBox){
        int i = comboBox.getSelectedIndex();
        String colorCode;
        switch (i){
            case 0:
            colorCode = "128,0,0";
            break;

            case 1:
            colorCode = "255,0,0";
            break;

            case 2:
            colorCode = "255,255,0";
            break;

            case 3:
            colorCode = "0,128,0";
            break;

            case 4:
            colorCode = "0,255,0";
            break;

            case 5:
            colorCode = "0,0,128";
            break;

            case 6:
            colorCode = "0,0,255";
            break;

            case 7:
            colorCode = "0,128,128";
            break;

            case 8:
            colorCode = "0,255,255";
            break;

            case 9:
            colorCode = "128,0,128";
            break;

            case 10:
            colorCode = "255,0,255";
            break;

            case 11:
            colorCode = "128,128,0";
            break;

            case 12:
            colorCode = "128,128,128";
            break;

            case 13:
            colorCode = "192,192,192";
            break;

            default:
            colorCode = "0,0,0";  
        }
        return colorCode;
    }
    
    /**
     * setTheContentNNProperties() saves the content
     * settings into the content variables located as
     * public static variables in the PropertiesEditor Class.
     */
    private void setTheContentNNProperties() {
        PropertiesEditor.language1NumberOfContentDeclarations = NumOfContentDecsCB1.getSelectedItem().toString();
        PropertiesEditor.language2NumberOfContentDeclarations = NumOfContentDecsCB2.getSelectedItem().toString();
        PropertiesEditor.language3NumberOfContentDeclarations = NumOfContentDecsCB3.getSelectedItem().toString();        
        
        ///////////////////////////////////////////
        //////////////// LANGUAGE-1 ///////////////
        ///////////////////////////////////////////
        
        // language1Content01
        if (!"".equals(DisplayTextTextField1.getText())){
            PropertiesEditor.language1Content01DisplayText = DisplayTextTextField1.getText();
        }
        if (!"NONE".equals(FontColourComboBox.getSelectedItem().toString())){
            PropertiesEditor.language1Content01FontColour = getRGBCodes(FontColourComboBox);
        }
        if (!"NONE".equals(FontStyleComboBox1.getSelectedItem().toString())){
            PropertiesEditor.language1Content01FontStyle = FontStyleComboBox1.getSelectedItem().toString();
        }
        
        if (DisplaySelectableCheckBox1.isSelected()){
            PropertiesEditor.language1Content01DisplaySelectable = "true";
        } else {
            PropertiesEditor.language1Content01DisplaySelectable = "false";
        }
        // language1Content02
        switch (NumOfContentDecsCB1.getSelectedItem().toString()) {
            case "2":
                if (!"".equals(DisplayTextTF1.getText())){
                    PropertiesEditor.language1Content02DisplayText = DisplayTextTF1.getText();
                }
                if (!"NONE".equals(FontColourCB1.getSelectedItem().toString())){
                    PropertiesEditor.language1Content02FontColour = getRGBCodes(FontColourCB1);
                }
                if (!"NONE".equals(FontStyleCB1.getSelectedItem().toString())){
                    PropertiesEditor.language1Content02FontStyle = FontStyleCB1.getSelectedItem().toString();
                }
                if (DisplaySelectableCheckB1.isSelected()){
                    PropertiesEditor.language1Content02DisplaySelectable = "true";
                } else {
                    PropertiesEditor.language1Content02DisplaySelectable = "false";
                }
                break;
            case "3":
                if (!"".equals(DisplayTextTF2.getText())){
                    PropertiesEditor.language1Content03DisplayText = DisplayTextTF2.getText();
                }
                if (!"NONE".equals(FontColourCB2.getSelectedItem().toString())){
                    PropertiesEditor.language1Content03FontColour = getRGBCodes(FontColourCB2);
                }
                if (!"NONE".equals(FontStyleCB2.getSelectedItem().toString())){
                    PropertiesEditor.language1Content03FontStyle = FontStyleCB2.getSelectedItem().toString();
                }
                if (DisplaySelectableCheckB2.isSelected()){
                    PropertiesEditor.language1Content03DisplaySelectable = "true";
                } else {
                    PropertiesEditor.language1Content03DisplaySelectable = "false";
                }
                break;
            case "4":
                if (!"".equals(DisplayTextTF3.getText())){
                    PropertiesEditor.language1Content04DisplayText = DisplayTextTF3.getText();
                }
                if (!"NONE".equals(FontColourCB3.getSelectedItem().toString())){
                    PropertiesEditor.language1Content04FontColour = getRGBCodes(FontColourCB3);
                }
                if (!"NONE".equals(FontStyleCB3.getSelectedItem().toString())){
                    PropertiesEditor.language1Content04FontStyle = FontStyleCB3.getSelectedItem().toString();
                }
                if (DisplaySelectableCheckB3.isSelected()){
                    PropertiesEditor.language1Content04DisplaySelectable = "true";
                } else {
                    PropertiesEditor.language1Content04DisplaySelectable = "false";
                }
                break;
        }
        
        ///////////////////////////////////////////
        //////////////// LANGUAGE-2 ///////////////
        /////////////////////////////////////////// 
        if (!"".equals(DisplayTextTextField2.getText())){
            PropertiesEditor.language2Content01DisplayText = DisplayTextTextField2.getText();
        }
        
        if (!"NONE".equals(FontColourComboBox2.getSelectedItem().toString())){
            PropertiesEditor.language2Content01FontColour = getRGBCodes(FontColourComboBox2);
        }
        
        if (!"NONE".equals(FontStyleComboBox2.getSelectedItem().toString())){
            PropertiesEditor.language2Content01FontStyle = FontStyleComboBox2.getSelectedItem().toString();
        }
        
        if (DisplaySelectableCheckBox2.isSelected()){
            PropertiesEditor.language2Content01DisplaySelectable = "true";
        } else {
            PropertiesEditor.language2Content01DisplaySelectable = "false";
        }
        switch (NumOfContentDecsCB2.getSelectedItem().toString()) {
            case "2":
                if (!"".equals(DisplayTextTF4.getText())){
                    PropertiesEditor.language2Content02DisplayText = DisplayTextTF4.getText();
                }
                if (!"NONE".equals(FontColourCB4.getSelectedItem().toString())){
                    PropertiesEditor.language2Content02FontColour = getRGBCodes(FontColourCB4);
                }
                if (!"NONE".equals(FontStyleCB4.getSelectedItem().toString())){
                    PropertiesEditor.language2Content02FontStyle = FontStyleCB4.getSelectedItem().toString();
                }
                if (DisplaySelectableCheckB4.isSelected()){
                    PropertiesEditor.language2Content02DisplaySelectable = "true";
                } else {
                    PropertiesEditor.language2Content02DisplaySelectable = "false";
                }
                break;
            case "3":
                if (!"".equals(DisplayTextTF5.getText())){
                    PropertiesEditor.language2Content03DisplayText = DisplayTextTF5.getText();
                }
                if (!"NONE".equals(FontColourCB5.getSelectedItem().toString())){
                    PropertiesEditor.language2Content03FontColour = getRGBCodes(FontColourCB5);
                }
                if (!"NONE".equals(FontStyleCB5.getSelectedItem().toString())){
                    PropertiesEditor.language2Content03FontStyle = FontStyleCB5.getSelectedItem().toString();
                }
                if (DisplaySelectableCheckB5.isSelected()){
                    PropertiesEditor.language2Content03DisplaySelectable = "true";
                } else {
                    PropertiesEditor.language2Content03DisplaySelectable = "false";
                }
                break;
            case "4":
                if (!"".equals(DisplayTextTF6.getText())){
                    PropertiesEditor.language2Content04DisplayText = DisplayTextTF6.getText();
                }
                if (!"NONE".equals(FontColourCB6.getSelectedItem().toString())){
                    PropertiesEditor.language2Content04FontColour = getRGBCodes(FontColourCB6);
                }
                if (!"NONE".equals(FontStyleCB6.getSelectedItem().toString())){
                    PropertiesEditor.language2Content04FontStyle = FontStyleCB6.getSelectedItem().toString();
                }
                if (DisplaySelectableCheckB6.isSelected()){
                    PropertiesEditor.language2Content04DisplaySelectable = "true";
                } else {
                    PropertiesEditor.language2Content04DisplaySelectable = "false";
                }
                break;
        }
        
        ///////////////////////////////////////////
        //////////////// LANGUAGE-3 ///////////////
        ///////////////////////////////////////////
        if (!"".equals(DisplayTextTextField3.getText())){
            PropertiesEditor.language3Content01DisplayText = DisplayTextTextField3.getText();
        }
        
        if (!"NONE".equals(FontColourComboBox3.getSelectedItem().toString())){
            PropertiesEditor.language3Content01FontColour = getRGBCodes(FontColourComboBox3);
        }

        if (!"NONE".equals(FontStyleComboBox3.getSelectedItem().toString())){
            PropertiesEditor.language3Content01FontStyle = FontStyleComboBox3.getSelectedItem().toString();
        }
        
        if (DisplaySelectableCheckBox3.isSelected()){
            PropertiesEditor.language3Content01DisplaySelectable = "true";
        } else {
            PropertiesEditor.language3Content01DisplaySelectable = "false";
        }
        switch (NumOfContentDecsCB3.getSelectedItem().toString()) {
            case "2":
                if (!"".equals(DisplayTextTF7.getText())){
                    PropertiesEditor.language3Content02DisplayText = DisplayTextTF7.getText();
                }
                if (!"NONE".equals(FontColourCB7.getSelectedItem().toString())){
                    PropertiesEditor.language3Content02FontColour = getRGBCodes(FontColourCB7);
                }
                if (!"NONE".equals(FontStyleCB7.getSelectedItem().toString())){
                    PropertiesEditor.language3Content02FontStyle = FontStyleCB7.getSelectedItem().toString();
                }
                if (DisplaySelectableCheckB7.isSelected()){
                    PropertiesEditor.language3Content02DisplaySelectable = "true";
                } else {
                    PropertiesEditor.language3Content02DisplaySelectable = "false";
                }
                break;
            case "3":
                if (!"".equals(DisplayTextTF8.getText())){
                    PropertiesEditor.language3Content03DisplayText = DisplayTextTF8.getText();
                }
                if (!"NONE".equals(FontColourCB8.getSelectedItem().toString())){
                    PropertiesEditor.language3Content03FontColour = getRGBCodes(FontColourCB8);
                }
                if (!"NONE".equals(FontStyleCB8.getSelectedItem().toString())){
                    PropertiesEditor.language3Content03FontStyle = FontStyleCB8.getSelectedItem().toString();
                }
                if (DisplaySelectableCheckB8.isSelected()){
                    PropertiesEditor.language3Content03DisplaySelectable = "true";
                } else {
                    PropertiesEditor.language3Content03DisplaySelectable = "false";
                }
                break;
            case "4":
                if (!"".equals(DisplayTextTF9.getText())){
                    PropertiesEditor.language3Content04DisplayText = DisplayTextTF9.getText();
                }
                if (!"NONE".equals(FontColourCB9.getSelectedItem().toString())){
                    PropertiesEditor.language3Content04FontColour = getRGBCodes(FontColourCB9);
                }
                if (!"NONE".equalsIgnoreCase(FontStyleCB9.getSelectedItem().toString())){
                    PropertiesEditor.language3Content04FontStyle = FontStyleCB9.getSelectedItem().toString();
                }
                if (DisplaySelectableCheckB9.isSelected()){
                    PropertiesEditor.language3Content04DisplaySelectable = "true";
                } else {
                    PropertiesEditor.language3Content04DisplaySelectable = "false";
                }
                break;
        }
    }
    
    
    ////////////////////////////////////////////////
    //  Creating a fake progress bar which will   //
    //  give to the user the impression that the  //
    //  values are saved in a few seconds...      //
    //  In reality it takes less than a second    //
    //  for the values to be saved. This progress //
    //  bar reassures the user and shows her that //
    //  the values are really being saved and she //
    //  can experience this visually. Of course   //
    //  the values are saved but it happens so    //
    //  quickly that without this progress bar,   //
    //  the user might have the impression that   //
    //  nothing is being saved.                   //
    ////////////////////////////////////////////////
    
    // task variable that will be
    // used to execute the task
    private Task task;

    // task class
    class Task extends SwingWorker<Void, Void> {
        @Override
        public Void doInBackground() {
            Random random = new Random();
            int progress = 0;
            //Initialize progress property.
            setProgress(0);
            while (progress < 100) {
                //Sleep
                try {
                    Thread.sleep(random.nextInt(50));
                } catch (InterruptedException ignore) {}
                //Make random progress.
                progress += random.nextInt(10);
                setProgress(Math.min(progress, 100));
            }
            return null;
        }

        @Override
        public void done() {
            Toolkit.getDefaultToolkit().beep();
            setCursor(null); //turn off the wait cursor
            setContentValsBT.setEnabled(true);
            quitButton.setEnabled(true);
            DfMCreatorMain.printAnyMsg(I18n.tr("values.saved.msg.contentPropsEditor"), I18n.tr("DONE.contentPropsEditor"), JOptionPane.PLAIN_MESSAGE);
        }
    }

    // sort of actionPerformed that will actually
    // call the fake progress bar.
    public void progBarActPerf() {
        setContentValsBT.setEnabled(false);
        quitButton.setEnabled(false);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        task = new Task();
        task.addPropertyChangeListener(this);
        task.execute();
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress".equals(evt.getPropertyName())) {
            int progress = (Integer) evt.getNewValue();
            progressBar.setValue(progress);
        } 
    }    
    ////////////////////////////////////////////////

}
